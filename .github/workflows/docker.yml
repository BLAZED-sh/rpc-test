name: Build and Push Docker Image

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short
          labels: |
            org.opencontainers.image.description=Docker image for ${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.licenses=MIT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./go/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Update package visibility
        if: github.event_name != 'pull_request'
        run: |
          echo "Making package public..."
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          PACKAGE_NAME=$(echo "$REPO_NAME" | cut -d '/' -f 2)
          
          # Get the package ID
          PACKAGE_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/orgs/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME" | \
            jq -r '.id')
          
          if [ "$PACKAGE_ID" != "null" ]; then
            # Update visibility to public
            curl -X PATCH \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -d '{"visibility":"public"}' \
              "https://api.github.com/orgs/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME"
            echo "Package visibility updated to public"
          else
            echo "Package not found or could not retrieve package ID"
          fi

